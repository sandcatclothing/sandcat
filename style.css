document.addEventListener("DOMContentLoaded", () => {
  const hackScreen = document.getElementById("hack-screen");
  const consoleMenu = document.getElementById("console-menu");
  const secretInput = document.getElementById("secret-input");
  const secretCollection = document.getElementById("secret-collection");

  const messages = [
    "SANDCAT mode: ACTIVATED"
  ];

  let currentLine = 0;

  const randomChar = () => {
    const chars = "!@#$%^&*()_+=-[]{}|;:,.<>/?0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    return chars[Math.floor(Math.random() * chars.length)];
  };

  const revealText = (text, callback) => {
    let display = new Array(text.length).fill("");
    let iterations = 0;
    const totalIterations = text.length * 6;

    const interval = setInterval(() => {
      for (let i = 0; i < text.length; i++) {
        if (iterations / 6 > i) {
          display[i] = text[i];
        } else {
          display[i] = randomChar();
        }
      }

      hackScreen.innerText = display.join("");
      iterations++;

      if (iterations > totalIterations) {
        clearInterval(interval);
        hackScreen.innerText = text;
        setTimeout(callback, 500);
      }
    }, 30);
  };

  const showNextLine = () => {
    if (currentLine < messages.length) {
      revealText(messages[currentLine], () => {
        currentLine++;
        showNextLine();
      });
    } else {
      // Oculta pantalla de hack y muestra el menú
      setTimeout(() => {
        hackScreen.classList.add("hidden");
        consoleMenu.classList.remove("hidden");
      }, 1000);
    }
  };

  showNextLine();

  // Función hamburguesa (reabre menú si se cierra)
  window.toggleMenu = () => {
    consoleMenu.classList.toggle("hidden");
  };

  // Simulación navegación
  window.navigate = (section) => {
    alert(`Going to: ${section}`);
    consoleMenu.classList.add("hidden");
  };

  // Comando secreto
  window.handleCommand = (e) => {
    if (e.key === "Enter") {
      const value = secretInput.value.trim().toLowerCase();
      if (value === "paraloschavales") {
        secretCollection.classList.remove("hidden");
      }
      secretInput.value = "";
    }
  };
});


